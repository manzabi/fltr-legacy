import * as opportunityType from '../../constants/opportunityType';

import {
    FETCH_INREVIEW_OPPORTUNITY_LIST_FULFILLED,
    FETCH_INREVIEW_OPPORTUNITY_LIST_REJECTED,
    FETCH_INREVIEW_OPPORTUNITY_LIST_REQUEST,

    FETCH_ABOUTTOSTART_OPPORTUNITY_LIST_FULFILLED,
    FETCH_ABOUTTOSTART_OPPORTUNITY_LIST_REJECTED,
    FETCH_ABOUTTOSTART_OPPORTUNITY_LIST_REQUEST,

    FETCH_CLOSED_OPPORTUNITY_LIST_FULFILLED,
    FETCH_CLOSED_OPPORTUNITY_LIST_REJECTED,
    FETCH_CLOSED_OPPORTUNITY_LIST_REQUEST,

    FETCH_OPPORTUNITY_SUMMARY_FULFILLED,
    FETCH_OPPORTUNITY_SUMMARY_REJECTED,
    FETCH_OPPORTUNITY_SUMMARY_REQUEST,

    FETCH_PENDING_OPPORTUNITIES_SUMMARY_FULFILLED,
    FETCH_PENDING_OPPORTUNITIES_SUMMARY_REJECTED,
    FETCH_PENDING_OPPORTUNITIES_SUMMARY_REQUEST,

    RECRUITER_OPPORTUNITY_LIST_FULFILLED,
    RECRUITER_OPPORTUNITY_LIST_REJECTED,
    RECRUITER_OPPORTUNITY_LIST_REQUEST,

    RECRUITER_OPPORTUNITY_MATCH_FULFILLED,
    RECRUITER_OPPORTUNITY_MATCH_REJECTED,
    RECRUITER_OPPORTUNITY_MATCH_REQUEST,

    RECRUITER_OPPORTUNITY_COMPLETE_TAG_LIST_FULFILLED,
    RECRUITER_OPPORTUNITY_COMPLETE_TAG_LIST_REJECTED,
    RECRUITER_OPPORTUNITY_COMPLETE_TAG_LIST_REQUEST,

    RECRUITER_OPPORTUNITY_CURRENT_TAG_LIST_FULFILLED,
    RECRUITER_OPPORTUNITY_CURRENT_TAG_LIST_REJECTED,
    RECRUITER_OPPORTUNITY_CURRENT_TAG_LIST_REQUEST,

    RECRUITER_OPPORTUNITY_SAVE_TAGS_FULFILLED,
    RECRUITER_OPPORTUNITY_SAVE_TAGS_REJECTED,
    RECRUITER_OPPORTUNITY_SAVE_TAGS_REQUEST,

    RECRUITER_OPPORTUNITY_CREATE_CHALLENGE_FULFILLED,
    RECRUITER_OPPORTUNITY_CREATE_CHALLENGE_REJECTED,
    RECRUITER_OPPORTUNITY_CREATE_CHALLENGE_REQUEST,

    EXPERT_ACCEPT_PENDING_OPPORTUNITY_FULFILLED,
    EXPERT_ACCEPT_PENDING_OPPORTUNITY_REJECTED,
    EXPERT_ACCEPT_PENDING_OPPORTUNITY_REQUEST,

    EXPERT_DECLINE_PENDING_OPPORTUNITY_FULFILLED,
    EXPERT_DECLINE_PENDING_OPPORTUNITY_REJECTED,
    EXPERT_DECLINE_PENDING_OPPORTUNITY_REQUEST,

    RECRUITER_OPPORTUNITY_FETCH_CHALLENGE_FULFILLED,
    RECRUITER_OPPORTUNITY_FETCH_CHALLENGE_REJECTED,
    RECRUITER_OPPORTUNITY_FETCH_CHALLENGE_REQUEST,
    RECRUITER_OPPORTUNITY_FETCH_CHALLENGE_RESET,

    RESET_EXPERT_OPPORTUNITY_LIST,

    EXPERT_OPPORTUNITY_LIST_FULFILLED,
    EXPERT_OPPORTUNITY_LIST_REJECTED,
    EXPERT_OPPORTUNITY_LIST_REQUEST,

    EXPERT_OPPORTUNITY_ARCHIVED_LIST_FULFILLED,
    EXPERT_OPPORTUNITY_ARCHIVED_LIST_REJECTED,
    EXPERT_OPPORTUNITY_ARCHIVED_LIST_REQUEST,

    EXTEND_MATCH_FULFILLED,
    EXTEND_MATCH_REJECTED,
    EXTEND_MATCH_REQUEST,


} from '../actions/actionTypes';

import {commonListReducer, commonReducer, commonListReducerResetNoContentWrapper, commonReducerReset, initial} from './commonReducer';
import {ACTIONS} from '../actions/opportunityActions';

function opportunitySummary(state = initial, action) {
    return commonReducer(state, action, FETCH_OPPORTUNITY_SUMMARY_REQUEST, FETCH_OPPORTUNITY_SUMMARY_FULFILLED, FETCH_OPPORTUNITY_SUMMARY_REJECTED);
}

function opportunitiesCompleteTagList(state = initial, action) {
    return commonReducer(state, action, RECRUITER_OPPORTUNITY_COMPLETE_TAG_LIST_REQUEST, RECRUITER_OPPORTUNITY_COMPLETE_TAG_LIST_FULFILLED, RECRUITER_OPPORTUNITY_COMPLETE_TAG_LIST_REJECTED);
}

function recruiterOpportunityCurrentTagList(state = initial, action) {
    return commonListReducerResetNoContentWrapper(state, action, RECRUITER_OPPORTUNITY_CURRENT_TAG_LIST_REQUEST, RECRUITER_OPPORTUNITY_CURRENT_TAG_LIST_FULFILLED, RECRUITER_OPPORTUNITY_CURRENT_TAG_LIST_REJECTED, 'RECRUITER_OPPORTUNITY_CURRENT_TAG_LIST_RESET');
}

function saveOpportunityTags(state = initial, action) {
    return commonListReducerResetNoContentWrapper(state, action, RECRUITER_OPPORTUNITY_SAVE_TAGS_REQUEST, RECRUITER_OPPORTUNITY_SAVE_TAGS_FULFILLED, RECRUITER_OPPORTUNITY_SAVE_TAGS_REJECTED);
}

function createOpportunityChallenge(state = initial, action) {
    return commonReducer(state, action, RECRUITER_OPPORTUNITY_CREATE_CHALLENGE_REQUEST, RECRUITER_OPPORTUNITY_CREATE_CHALLENGE_FULFILLED, RECRUITER_OPPORTUNITY_CREATE_CHALLENGE_REJECTED);
}

function fetchOpportunityChallenge(state = initial, action) {
    return commonReducerReset(state, action, RECRUITER_OPPORTUNITY_FETCH_CHALLENGE_REQUEST, RECRUITER_OPPORTUNITY_FETCH_CHALLENGE_FULFILLED, RECRUITER_OPPORTUNITY_FETCH_CHALLENGE_REJECTED, RECRUITER_OPPORTUNITY_FETCH_CHALLENGE_RESET);
}

function expertPendingOpportunities(state = initial, action) {
    return commonListReducerResetNoContentWrapper(state, action, FETCH_PENDING_OPPORTUNITIES_SUMMARY_REQUEST, FETCH_PENDING_OPPORTUNITIES_SUMMARY_FULFILLED, FETCH_PENDING_OPPORTUNITIES_SUMMARY_REJECTED);
}

function acceptPendingOpportunity(state = initial, action) {
    return commonReducerReset(state, action, EXPERT_ACCEPT_PENDING_OPPORTUNITY_REQUEST, EXPERT_ACCEPT_PENDING_OPPORTUNITY_FULFILLED, EXPERT_ACCEPT_PENDING_OPPORTUNITY_REJECTED);
}

function declinePendingOpportunity(state = initial, action) {
    return commonReducerReset(state, action, EXPERT_DECLINE_PENDING_OPPORTUNITY_REQUEST, EXPERT_DECLINE_PENDING_OPPORTUNITY_FULFILLED, EXPERT_DECLINE_PENDING_OPPORTUNITY_REJECTED);
}

function expertActiveChallenges(state = initial, action) {
    return commonListReducer(state, action, EXPERT_OPPORTUNITY_LIST_REQUEST, EXPERT_OPPORTUNITY_LIST_FULFILLED, EXPERT_OPPORTUNITY_LIST_REJECTED);

}

function expertArchivedChallenges(state = initial, action) {
    return commonListReducer(state, action, EXPERT_OPPORTUNITY_ARCHIVED_LIST_REQUEST, EXPERT_OPPORTUNITY_ARCHIVED_LIST_FULFILLED, EXPERT_OPPORTUNITY_ARCHIVED_LIST_REJECTED);

}

function extendPlayer(state = initial, action) {
    return commonReducer(state, action, EXTEND_MATCH_REQUEST, EXTEND_MATCH_FULFILLED, EXTEND_MATCH_REJECTED);
}

function slackButton(state = initial, action) {
    const requestAction = `${ACTIONS.OPPORTUNITY_SLACK_CONNECT_INFO}_REQUEST`;
    const fulfilledAction = `${ACTIONS.OPPORTUNITY_SLACK_CONNECT_INFO}_FULFILLED`;
    const rejectedAction = `${ACTIONS.OPPORTUNITY_SLACK_CONNECT_INFO}_REJECTED`;
    const resetAction = `${ACTIONS.OPPORTUNITY_SLACK_CONNECT_INFO}_RESET`;
    return commonReducerReset(state, action, requestAction,fulfilledAction, rejectedAction, resetAction);
}

function slackBindings(state = initial, action) {
    const requestAction = `${ACTIONS.OPPORTUNITY_SLACK_BINDINGS}_REQUEST`;
    const fulfilledAction = `${ACTIONS.OPPORTUNITY_SLACK_BINDINGS}_FULFILLED`;
    const rejectedAction = `${ACTIONS.OPPORTUNITY_SLACK_BINDINGS}_REJECTED`;
    const resetAction = `${ACTIONS.OPPORTUNITY_SLACK_BINDINGS}_RESET`;
    return commonReducerReset(state, action, requestAction,fulfilledAction, rejectedAction, resetAction);
}

module.exports = {
    opportunitySummary,
    opportunitiesCompleteTagList,
    recruiterOpportunityCurrentTagList,
    saveOpportunityTags,
    createOpportunityChallenge,
    fetchOpportunityChallenge,
    expertPendingOpportunities,
    acceptPendingOpportunity,
    declinePendingOpportunity,
    expertActiveChallenges,
    expertArchivedChallenges,
    extendPlayer,
    slackButton,
    slackBindings
};